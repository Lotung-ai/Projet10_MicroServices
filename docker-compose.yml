version: '3.4'

services:
  microfrontend:
    image: ${DOCKER_REGISTRY}microfrontend
    build:
      context: .
      dockerfile: MicroFrontEnd/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - MicroServicesUrl=${MicroServicesUrl}
      - MicroServiceNoteUrl=${MicroServiceNoteUrl}
      - OcelotAPIGwUrl=${OcelotAPIGwUrl}
    ports:
      - "5211:80"
    depends_on:
      - microservices
      - microservicenote
      - ocelotapigw
      - microserviceauth
    networks:
      - app-network

  microservices:
    image: ${DOCKER_REGISTRY}microservices
    build:
      context: .
      dockerfile: MicroServices/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=${ConnectionStrings__DefaultConnection}
    ports:
      - "5000:80"
    depends_on:
      - sqlserver
    networks:
      - app-network

  microservicenote:
    image: ${DOCKER_REGISTRY}microservicenote
    build:
      context: .
      dockerfile: MicroServiceNote/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - MongoDbSettings__ConnectionString=${MongoDbSettings__ConnectionString}
      - MongoDbSettings__DatabaseName=${MongoDbSettings__DatabaseName}
    ports:
      - "5058:80"
    depends_on:
      - mongo
    networks:
      - app-network

  microservicereport:
    image: ${DOCKER_REGISTRY}microservicereport
    build:
      context: .
      dockerfile: MicroServiceReport/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=${ConnectionStrings__DefaultConnection}
      - MongoDbSettings__ConnectionString=${MongoDbSettings__ConnectionString}
      - MongoDbSettings__DatabaseName=${MongoDbSettings__DatabaseName}
    ports:
      - "5250:80"
    depends_on:
      - sqlserver
      - mongo
    networks:
      - app-network

  ocelotapigw:
    image: ${DOCKER_REGISTRY}ocelotapigw
    build:
      context: .
      dockerfile: OcelotAPIGw/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "5003:80"
    networks:
      - app-network

  microserviceauth:
    image: ${DOCKER_REGISTRY}microserviceauth
    build:
      context: .
      dockerfile: MicroServiceAuth/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=${ConnectionStrings__DefaultConnection}
    ports:
      - "5019:80"
    depends_on:
      - sqlserver
    networks:
      - app-network
 
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=${MSSQL_SA_PASSWORD}
    ports:
      - "5433:1433"
    networks:
      - app-network
    volumes:
      - sqlserver-data:/var/opt/mssql
 
  mongo:
    image: mongo
    restart: always
    ports:
      - "27018:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - app-network
    volumes:
      - mongodb-data:/data/db 

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: ${MongoDbSettings__ConnectionString}
      ME_CONFIG_BASICAUTH: false
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  sqlserver-data:
  mongodb-data:
