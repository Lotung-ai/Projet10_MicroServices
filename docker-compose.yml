version: '3.4'

services:
  microfrontend:
    image: ${DOCKER_REGISTRY-}microfrontend
    build:
      context: .
      dockerfile: MicroFrontEnd/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - MicroServicesUrl=http://microservices:5000
      - OcelotAPIGwUrl=http://ocelotapigw:5003
    ports:
      - "5211:80"
    depends_on:
      - microservices
      - ocelotapigw
    networks:
      - app-network

  microservices:
    image: ${DOCKER_REGISTRY-}microservices
    build:
      context: .
      dockerfile: MicroServices/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=PatientDb;User Id=SA;Password=YourP@ssw0rd;Encrypt=False;TrustServerCertificate=True;
      - MongoDbSettings__ConnectionString=mongodb://mongodb:27017
      - MongoDbSettings__DatabaseName=PatientDb
    ports:
      - "5000:80"
    depends_on:
      - sqlserver
    networks:
      - app-network

  ocelotapigw:
    image: ${DOCKER_REGISTRY-}ocelotapigw
    build:
      context: .
      dockerfile: OcelotAPIGw/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "5003:80"
    networks:
      - app-network

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=YourP@ssw0rd
    ports:
      - "5433:1433"
    networks:
      - app-network
    volumes:
      - sqlserver-data:/var/opt/mssql

networks:
  app-network:
    driver: bridge

volumes:
  sqlserver-data:
